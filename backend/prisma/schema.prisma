generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ChatType {
  text
  chart
}

model User {
  id        String       @id @default(uuid())
  email     String       @unique
  password  String?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  chats     Chat[]
  files     FileUpload[]
}

model Chat {
  id         String       @id
  name       String
  isFavorite Boolean      @default(false)
  isArchived Boolean      @default(false)
  isShare Boolean      @default(false)
  type       ChatType     @default(text)
  createdAt  DateTime     @default(now())
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  messages   Message[]
  files      FileUpload[]
  share      share?
  encryptedAesKey String 
}

model share {
  id        String   @id
  createdAt DateTime @default(now())
  userId    String
  chatId    String   @unique
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Message {
  id         String   @id
  content    String
  role       String
  createdAt  DateTime @default(now())
  isLiked    Boolean  @default(false)
  isDisliked Boolean  @default(false)
  chat       Chat     @relation(fields: [chatId], references: [id],onDelete: Cascade)
  chatId     String
  for        String   @default("chat")
}

model FileUpload {
  id         String   @id @default(uuid())
  fileName   String
  mimeType   String
  data       Bytes
  uploadedAt DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  chat       Chat?    @relation(fields: [chatId], references: [id])
  chatId     String?
}
